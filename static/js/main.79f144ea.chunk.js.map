{"version":3,"sources":["data/Subscribable.ts","services/Notification.ts","components/ConfirmationModal.tsx","data/Countdown.ts","services/Countdown.ts","data/History.ts","services/History.ts","components/Sidebar.tsx","data/format/Time.ts","widgets/TwoText.tsx","components/History.tsx","widgets/LabelSlider.tsx","components/Countdown.tsx","components/FlexModal.tsx","App.tsx","index.tsx"],"names":["Subscribable","subscribers","Map","name","id","callback","console","debug","this","constructor","set","delete","forEach","value","key","map","NotificationService","_desktopNotificationSupport","window","_instance","desktopNotificationSupport","Notification","permission","requestPermission","then","updateSubscribers","title","options","onclick","notification","event","close","focus","ConfirmationModal","withStyles","theme","createStyles","modal","display","alignItems","justifyContent","padding","border","classes","props","Modal","open","onClose","closeAfterTransition","className","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Card","Grid","container","direction","alignContent","item","xs","Typography","variant","subtitle","Button","color","onClick","onConfirm","buttonText","Component","defaultProps","Countdown","countdown","_startTime","undefined","_endTime","_running","_paused","_name","_min","_max","_value","_intervalMs","startTime","endTime","running","paused","min","max","intervalMs","Date","now","update","secondsLeft","setTimeout","clearTimeout","Math","floor","CountdownCollection","collection","_items","_currentIndex","items","addItem","currentIndex","length","nextIndex","countdownObject","subscribe","push","index","a","b","lower","higher","RangeError","slice","filter","DEFAULT_COUNTDOWNS","CountdownService","_countdowns","load","countdowns","localStorage","getItem","JSON","parse","legacyCountdowns","currentCountdown","parseInt","save","setItem","stringify","HistoryItem","start","end","HistoryItemCollection","getFullYear","getMonth","getDay","HistoryService","_history","history","notificationService","instance","Sidebar","sideBar","width","footer","top","bottom","footerButton","state","notificationsEnabled","desktopNotificationEnabled","confirmResetOpen","confirmClearHistoryOpen","setState","refreshNotificationState","unsubscribe","Drawer","anchor","reset","clear","List","ListItem","button","requestDesktopNotificationPermissions","ListItemIcon","ListItemText","primary","ListItemSecondaryAction","Switch","edge","checked","inputProps","onFocus","onBlur","disabled","Divider","Box","position","process","TimeFormat","timerSeconds","hours","minutes","seconds","returnStr","join","timerMinutes","TwoText","flexDirection","flex","caption","text","HistoryList","table","minWidth","totalsGrid","flexGrow","totals","today","sort","durationMs","reduce","previous","current","spacing","height","Object","keys","Paper","TableContainer","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","component","scope","getHours","getMinutes","getSeconds","LabelSlider","fullWidth","centeringGrid","listItemText","sliderSpacing","verticalAlign","sliderLabelContainer","marginBottom","sliderLabel","paddingRight","editPopover","editContainer","popoverRef","label","editLabel","editMin","editMax","step","menuOpen","editing","labelError","minError","maxError","React","createRef","handleOnChange","bind","handleKeyPress","openPopover","closePopover","saveForm","cancelEdit","isNaN","newValue","onChange","onEditSave","formatCallback","m","Slider","getAriaValueText","valueLabelDisplay","aria-labelledby","IconButton","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","onEscapeKeyDown","TextField","error","margin","target","onKeyPress","getMinError","getMaxError","ref","renderNormalView","renderEditPopover","CountdownComponent","popperCardStyle","paddingLeft","backgroundColor","palette","grey","fillWidth","editingOrder","confirmDeleteOpen","confirmDeleteIndex","confirmDeleteName","warningNotificationSent","runningCountdown","handleStartStopOnClick","countdownSubscriber","stop","document","APP_TITLE_SHORT","advance","APP_TITLE","showNotification","body","elements","i","upDisabled","downDisabled","justifyItems","swapItems","labelSuffix","deleteItem","renderSliders","sm","ButtonGroup","pause","next","FlexGrid","grid","left","right","middle","center","FlexModal","children","App","root","overflow","menuButton","marginRight","gridContainer","paperContainer","sliderBox","paddingTop","popperContentsStyle","statusStyle","marginTop","sliderRefs","selectedDate","lastVersion","workLength","breakLength","sidebarOpen","notificationSupport","whatsNewModalOpen","checkSchedule","log","md","href","AppBar","Toolbar","utils","DateFnsUtils","date","minutesStep","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.79f144ea.chunk.js","sourcesContent":["export abstract class Subscribable {\n    private subscribers: Map<String, (() => void)> = new Map()\n    protected abstract readonly name: string\n\n    public subscribe(id: string, callback: () => void) {\n        console.debug('Subscribe', id, 'to', this.constructor.name, this)\n        this.subscribers.set(id, callback)\n    }\n\n    public unsubscribe(id: string) {\n        console.debug('Unsubscribe', id, 'from', this.constructor.name, this)\n        this.subscribers.delete(id)\n    }\n\n    protected updateSubscribers() {\n        this.subscribers.forEach((value, key, map) => {\n            console.debug('Update Subscriber', key, 'on', this.constructor.name, this)\n            value()\n        })\n    }\n}\n","import { Subscribable } from '../data/Subscribable'\n\nexport class NotificationService extends Subscribable {\n    private static _instance: NotificationService;\n    private _desktopNotificationSupport: boolean = false\n    protected readonly name: string = 'NotificationService'\n\n    public static get instance(): NotificationService {\n        return this._instance || (this._instance = new this())\n    }\n\n    private constructor() {\n        super()\n        this._desktopNotificationSupport = 'Notification' in window\n    }\n\n    public get desktopNotificationSupport(): boolean {\n        return this._desktopNotificationSupport\n    }\n\n    public get desktopNotificationEnabled() {\n        return this.desktopNotificationSupport && Notification.permission === 'granted'\n    }\n\n    public requestDesktopNotificationPermissions() {\n        if (this.desktopNotificationSupport && Notification.permission === 'default') {\n            Notification.requestPermission()\n                .then((value) => { this.updateSubscribers() })\n        }\n    }\n\n    public showNotification(\n        title: string,\n        options: NotificationOptions,\n        onclick: (notification: Notification, event: Event) => void = (\n            notification: Notification, event: Event\n        ) => {\n            notification.close(); window.focus()\n        }\n    ) {\n        let notification = new Notification(\n            title, options\n        )\n\n        notification.onclick = (event: Event) => (onclick(notification, event))\n    }\n}\n","import { Backdrop, Button, Card, createStyles, Fade, Grid, Modal, Theme, Typography, WithStyles, withStyles } from \"@material-ui/core\"\nimport React, { Component } from \"react\"\n\nconst styles = (theme: Theme) => createStyles({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 8,\n        border: 'none'\n    },\n});\n\ninterface ConfirmationModalProps extends WithStyles<typeof styles> {\n    onClose: () => void\n    onConfirm: () => void\n    open: boolean\n    title: string\n    subtitle: string\n    buttonText: string\n}\n\ninterface ConfirmationModalState { }\n\nexport const ConfirmationModal = withStyles(styles)(class ConfirmationModalComponent extends Component<ConfirmationModalProps, ConfirmationModalState> {\n    static defaultProps = {\n        title: 'Are you sure?',\n        subtitle: 'This action cannot be undone',\n        buttonText: 'Continue'\n    }\n\n    render() {\n        const classes = this.props.classes\n        return (\n            <Modal\n                open={this.props.open}\n                onClose={this.props.onClose}\n                closeAfterTransition\n                className={classes.modal}\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={this.props.open}>\n                    <Card className={classes.modal}>\n                        <Grid container direction='column' alignItems='center' alignContent='center'>\n                            <Grid item xs>\n                                <Typography variant='h4'>{this.props.title}</Typography>\n                            </Grid>\n                            <Grid item xs>\n                                <Typography variant='subtitle1'>{this.props.subtitle}</Typography><br />\n                            </Grid>\n                            <Button\n                                color='secondary'\n                                variant='contained'\n                                onClick={this.props.onConfirm}\n                            >\n                                <Grid item xs>\n                                    {this.props.buttonText}\n                                </Grid>\n                            </Button>\n                        </Grid>\n                    </Card>\n                </Fade>\n            </Modal>\n        )\n    }\n})\n","import { Subscribable } from \"./Subscribable\";\n\nconst DEFAULT_MIN = 1\nconst DEFAULT_MAX = 90\nconst DEFAULT_INTERVAL_MS = 1000\n\nconst SHORT_TIMER = false // For debug purposes\n\nexport interface CountdownObject {\n    name?: string,\n    min?: number,\n    max?: number,\n    startTime?: any,\n    endTime?: any,\n    running?: boolean,\n    paused?: boolean\n    value?: number,\n    intervalMs?: number,\n}\n\nexport class Countdown extends Subscribable {\n    private timeout: any\n\n    private _startTime?: number = undefined;\n    private _endTime?: number = undefined;\n\n    private _running: boolean = false\n    private _paused: boolean = false\n\n    private _name: string = 'NEW'\n    private _min: number = 1\n    private _max: number = 90\n    private _value: number = 0\n    private _intervalMs: number = 1000\n\n    public constructor(countdown: CountdownObject) {\n        super()\n        this._startTime = countdown.startTime\n        this._endTime = countdown.endTime\n        this._running = countdown.running === true\n        this._paused = countdown.paused === true\n        this._name = countdown.name ? countdown.name : 'NEW'\n        this._min = countdown.min ? countdown.min : DEFAULT_MIN\n        this._max = countdown.max ? countdown.max : DEFAULT_MAX\n        this._value = countdown.value ? countdown.value : this._min\n        this._intervalMs = countdown.intervalMs ? countdown.intervalMs : DEFAULT_INTERVAL_MS\n    }\n\n    public toJSON(): CountdownObject {\n        return {\n            startTime: this.startTime,\n            endTime: this.endTime,\n            running: this.running,\n            paused: this.paused,\n            name: this.name,\n            min: this.min,\n            max: this.max,\n            value: this.value,\n            intervalMs: this.intervalMs,\n        }\n    }\n\n    public get name(): string { return this._name }\n    public set name(name: string) { this._name = name; this.updateSubscribers() }\n\n    public get running(): boolean { return this._running }\n    public get paused(): boolean { return this._paused; }\n\n    public get value(): number { return this._value }\n    public set value(value: number) { this._value = value; this.updateSubscribers() }\n\n    public get min(): number { return this._min ? this._min : DEFAULT_MIN }\n    public set min(min: number) { this._min = min; this.updateSubscribers() }\n\n    public get max(): number { return this._max ? this._max : DEFAULT_MAX }\n    public set max(max: number) { this._max = max; this.updateSubscribers() }\n\n    public get intervalMs(): number { return this._intervalMs ? this._intervalMs : DEFAULT_INTERVAL_MS }\n\n    public get startTime(): number | undefined { return this._startTime }\n    public get endTime(): number | undefined { return this._endTime }\n\n    public get secondsLeft(): number {\n        if (this.running && this.endTime) {\n            return Math.floor((this.endTime - Date.now()) / 1000)\n        } else {\n            return 0\n        }\n    }\n\n    start() {\n        this._running = true\n        this._startTime = Date.now()\n        if (SHORT_TIMER) {\n            this._endTime = this._startTime + 2 * 1000\n        } else {\n            this._endTime = this._startTime + (this.value * 60 * 1000)\n        }\n\n        this.update()\n    }\n\n    stop() {\n        this._running = false\n        this._paused = false\n        this.update()\n    }\n\n    pause() {\n        if (this.running) {\n            this._paused = !this._paused\n            if (!this.paused) {\n                this._endTime = Date.now() + (this.secondsLeft * 1000)\n            }\n\n            this.update()\n        }\n    }\n\n    update() {\n        if (this.endTime !== undefined && !this.paused) {\n            if (this.secondsLeft > 0) {\n                this.timeout = setTimeout(() => this.update(), this.intervalMs)\n            } else {\n                this._running = false\n                this._endTime = Date.now()\n                clearTimeout(this.timeout)\n            }\n        }\n\n        this.updateSubscribers()\n    }\n}\n\nexport interface CountdownCollectionObject {\n    readonly items: CountdownObject[]\n    currentIndex?: number\n}\n\nexport class CountdownCollection extends Subscribable implements CountdownCollectionObject {\n    private _items: Countdown[] = []\n    private _currentIndex = 0\n    protected readonly name: string = 'CountdownCollection'\n\n    constructor(collection?: CountdownCollectionObject) {\n        super()\n        if (collection?.items) {\n            for (let item of collection.items) {\n                this.addItem(item)\n            }\n        }\n\n        if (collection?.currentIndex) {\n            this._currentIndex = collection.currentIndex\n        }\n\n        if (this._currentIndex > this.items.length - 1) {\n            this._currentIndex = 0\n        }\n    }\n\n    public get items(): Countdown[] { return this._items }\n    public get currentIndex(): number { return this._currentIndex }\n    public get current(): Countdown { return this.items[this.currentIndex] }\n    public get nextIndex(): number { return (this.currentIndex + 1) % this.items.length }\n    public get next(): Countdown { return this.items[this.nextIndex] }\n    public get runningCountdown(): Countdown | null {\n        return this.items.filter((countdown: Countdown) => countdown.running)[0]\n    }\n\n    public advance(): void {\n        this._currentIndex = this.nextIndex\n        this.updateSubscribers()\n    }\n\n    public toJSON(): CountdownCollectionObject {\n        return {\n            items: this.items,\n            currentIndex: this.currentIndex\n        }\n    }\n\n    public addItem(countdownObject: CountdownObject): void {\n        if (countdownObject !== null) {\n            let countdown: Countdown = new Countdown(countdownObject)\n            countdown.subscribe(this.name, () => {\n                this.updateSubscribers()\n            })\n\n            this.items.push(countdown)\n        }\n        this.updateSubscribers()\n    }\n\n    public deleteItem(index: number) {\n        delete this.items[index]\n        this.updateSubscribers()\n    }\n\n    public swapItems(a: number, b: number) {\n        let lower: number\n        let higher: number\n        if (a < b) {\n            lower = a\n            higher = b\n        } else if (b < a) {\n            lower = b\n            higher = a\n        } else {\n            throw new RangeError('Cannot swap an element with itself')\n        }\n\n        if (this.currentIndex === lower) this._currentIndex = higher;\n        else if (this.currentIndex === higher) this._currentIndex = lower;\n\n        this._items = [\n            ...this.items.slice(0, lower),\n            this.items[higher],\n            this.items[lower],\n            ...this.items.slice(higher + 1)\n        ]\n\n        this.updateSubscribers()\n    }\n\n    public getItem(index: number): Countdown {\n        return this.items[index]\n    }\n}\n","import { CountdownCollection, CountdownCollectionObject } from '../data/Countdown';\nimport { Subscribable } from '../data/Subscribable'\n\nconst DEFAULT_COUNTDOWNS: CountdownCollectionObject = {\n    items: [\n        { name: 'Work', min: 1, max: 90, value: 50 },\n        { name: 'Break time', min: 1, max: 15, value: 10 },\n    ]\n}\n\nexport class CountdownService extends Subscribable {\n    private static _instance: CountdownService;\n    private _countdowns: CountdownCollection = new CountdownCollection();\n    protected readonly name: string = 'CountdownService'\n\n    public static get instance(): CountdownService {\n        return this._instance || (this._instance = new this())\n    }\n\n    public get countdowns(): CountdownCollection { return this._countdowns }\n\n    public get items() {\n        return this.countdowns.items\n    }\n\n    private constructor() {\n        super()\n        this.load()\n    }\n\n    public load(): void {\n        let countdowns: string | null = localStorage.getItem(this.name)\n        if (countdowns) {\n            this._countdowns = new CountdownCollection(JSON.parse(countdowns))\n        } else {\n            let legacyCountdowns: string | null = localStorage.getItem('countdowns')\n            let currentCountdown: string | null = localStorage.getItem('currentCountdown')\n\n            if (legacyCountdowns) {\n                this._countdowns = new CountdownCollection({\n                    items: JSON.parse(legacyCountdowns),\n                    currentIndex: currentCountdown ? parseInt(currentCountdown) : 0\n                })\n\n            }\n        }\n\n        this._countdowns.subscribe(this.name, () => {\n            this.save()\n        })\n\n        this.save()\n    }\n\n    public save(): void {\n        localStorage.setItem(this.name, JSON.stringify(this.countdowns))\n        this.updateSubscribers()\n    }\n\n    public reset(): void {\n        this._countdowns = new CountdownCollection(DEFAULT_COUNTDOWNS);\n        this.save()\n    }\n}\n","import { Collection } from \"../interfaces/Collection\"\nimport { Subscribable } from \"./Subscribable\"\n\nexport interface HistoryItemObject {\n    name: string,\n    start: number,\n    end: number\n}\n\nexport class HistoryItem {\n    readonly name: string\n    readonly start: number\n    readonly end: number\n\n    constructor({\n        name,\n        start,\n        end\n    }: HistoryItemObject) {\n        this.name = name\n        this.start = start\n        this.end = end\n    }\n\n    public get durationMs(): number {\n        return this.end - this.start\n    }\n}\n\nexport class HistoryItemCollection extends Subscribable implements Collection<HistoryItem> {\n    readonly items: HistoryItem[] = []\n    protected readonly name: string = 'HistoryItemCollection'\n\n    constructor(collection?: Collection<HistoryItemObject>) {\n        super()\n        if (collection?.items) {\n            for (let item of collection.items) {\n                this.addItem(item)\n            }\n        }\n    }\n\n    public toJSON(): Collection<HistoryItemObject> {\n        return {\n            items: this.items\n        }\n    }\n\n    get today(): HistoryItem[] {\n        let now = new Date(Date.now())\n        return this.items.filter((item) => {\n            let start = new Date(item.start)\n            return (\n                start.getFullYear() === now.getFullYear() &&\n                start.getMonth() === now.getMonth() &&\n                start.getDay() === now.getDay()\n            )\n        })\n    }\n\n    public addItem(item: HistoryItemObject) {\n        this.items.push(new HistoryItem(item))\n        this.updateSubscribers()\n    }\n}\n","import { HistoryItemCollection, HistoryItemObject } from '../data/History';\nimport { Subscribable } from '../data/Subscribable'\n\nexport class HistoryService extends Subscribable {\n    private static _instance: HistoryService;\n    public static get instance(): HistoryService { return this._instance || (this._instance = new this()) }\n    protected readonly name: string = 'HistoryService'\n\n    private _history: HistoryItemCollection;\n\n    public get history(): HistoryItemCollection { return this._history }\n    public get items() { return this.history.items }\n\n    private constructor() {\n        super()\n        let history: string | null = localStorage.getItem('history')\n        if (history) {\n            this._history = new HistoryItemCollection(JSON.parse(history))\n        } else {\n            this._history = new HistoryItemCollection()\n        }\n    }\n\n    public save(): void {\n        localStorage.setItem('history', JSON.stringify(this.history))\n        this.updateSubscribers()\n    }\n\n    public addItem(item: HistoryItemObject) {\n        this._history.addItem(item)\n        this.save()\n    }\n\n    public clear(): void {\n        this._history = new HistoryItemCollection()\n        this.save()\n    }\n}\n","import React, { Component } from 'react';\n\nimport {\n    Box,\n    Button,\n    createStyles,\n    Divider,\n    Drawer,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    Switch,\n    Theme,\n    Typography,\n    WithStyles, withStyles\n} from '@material-ui/core';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { NotificationService } from '../services/Notification';\nimport { ConfirmationModal } from './ConfirmationModal';\nimport { CountdownService } from '../services/Countdown';\nimport { HistoryService } from '../services/History';\n\nconst styles = (theme: Theme) => createStyles({\n    sideBar: {\n        width: 250\n    },\n    footer: {\n        top: 'auto',\n        bottom: 0,\n        width: '100%',\n        padding: 8,\n    },\n    footerButton: {\n        width: '100%'\n    }\n})\n\nconst notificationService: NotificationService = NotificationService.instance\n\ninterface SidebarProps extends WithStyles<typeof styles> {\n    open: boolean,\n    onClose: Function,\n}\n\ninterface SidebarState {\n    notificationsEnabled: boolean\n    confirmResetOpen: boolean\n    confirmClearHistoryOpen: boolean\n}\n\nexport const Sidebar = withStyles(styles)(class SidebarComponent extends Component<SidebarProps, SidebarState> {\n    constructor(props: SidebarProps) {\n        super(props)\n        this.state = {\n            notificationsEnabled: notificationService.desktopNotificationEnabled,\n            confirmResetOpen: false,\n            confirmClearHistoryOpen: false\n        }\n    }\n\n    refreshNotificationState() {\n        if (this.state.notificationsEnabled !== notificationService.desktopNotificationEnabled) {\n            this.setState({\n                notificationsEnabled: notificationService.desktopNotificationEnabled\n            })\n        }\n    }\n\n    componentDidUpdate() {\n        this.refreshNotificationState()\n    }\n\n    componentDidMount() {\n        notificationService.subscribe('NotificationService', () => {\n            this.refreshNotificationState()\n        })\n    }\n\n    componentWillUnmount() {\n        notificationService.unsubscribe('NotificationService')\n    }\n\n    render() {\n        const classes = this.props.classes\n        return (\n            <Drawer\n                anchor='left'\n                open={this.props.open}\n                onClose={() => this.props.onClose()}\n            >\n                <ConfirmationModal\n                    open={this.state.confirmResetOpen}\n                    onClose={() => {\n                        this.setState({\n                            confirmResetOpen: false\n                        })\n\n                        this.props.onClose();\n                    }}\n                    onConfirm={() => {\n                        CountdownService.instance.reset()\n\n                        this.setState({\n                            confirmResetOpen: false\n                        })\n\n                        this.props.onClose();\n                    }}\n                    subtitle='Resetting your countdowns cannot be undone'\n                />\n                <ConfirmationModal\n                    open={this.state.confirmClearHistoryOpen}\n                    onClose={() => {\n                        this.setState({\n                            confirmClearHistoryOpen: false\n                        })\n\n                        this.props.onClose();\n                    }}\n                    onConfirm={() => {\n                        HistoryService.instance.clear()\n\n                        this.setState({\n                            confirmClearHistoryOpen: false\n                        })\n\n                        this.props.onClose();\n                    }}\n                    subtitle='Clearing history cannot be undone'\n                />\n                <div className={classes.sideBar} >\n                    <List>\n                        <ListItem\n                            button\n                            onClick={() => { notificationService.requestDesktopNotificationPermissions() }}\n                        >\n                            <ListItemIcon><NotificationsIcon /></ListItemIcon>\n                            <ListItemText primary=\"Notifications\" />\n                            <ListItemSecondaryAction>\n                                <Switch\n                                    edge=\"end\"\n                                    onClick={() => { notificationService.requestDesktopNotificationPermissions() }}\n                                    checked={this.state.notificationsEnabled}\n                                    inputProps={{ 'aria-labelledby': 'switch-list-label-bluetooth' }}\n                                    onFocus={() => this.refreshNotificationState()}\n                                    onBlur={() => this.refreshNotificationState()}\n                                    disabled={!notificationService.desktopNotificationSupport}\n                                />\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                        <Divider />\n                        <ListItem\n                            button\n                            onClick={() => { this.setState({ confirmClearHistoryOpen: true }) }}\n                        >\n                            <ListItemText primary='Clear history' />\n                        </ListItem>\n                        <ListItem\n                            button\n                            onClick={() => { this.setState({ confirmResetOpen: true }) }}\n                        >\n                            <ListItemText primary='Reset to defaults' />\n                        </ListItem>\n                    </List>\n                </div>\n                <Box position='fixed' className={classes.footer}>\n                    <Button>\n                        <Typography variant='caption'>\n                            Version {process.env.REACT_APP_VERSION} (what's new)\n                        </Typography>\n                    </Button>\n                </Box>\n            </Drawer>\n        )\n    }\n});\n","\nexport class TimeFormat {\n    static seconds(timerSeconds: number): string {\n        let hours = Math.floor(timerSeconds / 60 / 60)\n        let minutes = Math.floor((timerSeconds - (hours * 60 * 60)) / 60)\n        let seconds = Math.floor(timerSeconds - (hours * 60 * 60) - (minutes * 60))\n\n        let returnStr: string[] = []\n\n        if (hours > 0) {\n            returnStr.push(`${hours}h`)\n        }\n\n        if (minutes > 0) {\n            returnStr.push(`${minutes}m`)\n        }\n\n        returnStr.push(`${seconds}s`)\n\n        return returnStr.join(' ')\n    }\n\n    static minutes(timerMinutes: number): string {\n        let hours = Math.floor(timerMinutes / 60)\n        let minutes = timerMinutes - (hours * 60)\n\n        let returnStr: string[] = []\n\n        if (hours > 0) {\n            returnStr.push(`${hours}h`)\n        }\n\n        returnStr.push(`${minutes}m`)\n\n        return returnStr.join(' ')\n    }\n}\n","import { Box, createStyles, Theme, Typography, withStyles, WithStyles } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Component } from \"react\";\n\nconst styles = (theme: Theme) => createStyles({});\n\ninterface TwoTextProps extends WithStyles<typeof styles> {\n    caption: string,\n    text: string\n};\n\ninterface TwoTextState { }\n\nexport const TwoText = withStyles(styles)(class TwoTextInternal extends Component<TwoTextProps, TwoTextState> {\n    render() {\n        return (\n            <Box flexDirection='column' flex={2} display='flex' alignItems='center' >\n                <Box display='flex'>\n                    <Typography variant=\"caption\">{this.props.caption}</Typography>\n                </Box>\n                <Box display='flex'>\n                    <Typography variant='subtitle1'>{this.props.text}</Typography>\n                </Box>\n            </Box>\n        )\n    }\n});\n","import {\n    Box,\n    createStyles,\n    Grid,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Theme,\n    Typography,\n    WithStyles,\n    withStyles\n} from \"@material-ui/core\"\nimport React, { Component } from \"react\"\nimport { TimeFormat } from \"../data/format/Time\";\nimport { HistoryItem, HistoryItemCollection } from \"../data/History\";\nimport { HistoryService } from \"../services/History\";\nimport { TwoText } from \"../widgets/TwoText\";\n\nconst styles = (theme: Theme) => createStyles({\n    table: {\n        minWidth: 650,\n    },\n    totalsGrid: { flexGrow: 1, padding: 8 },\n});\n\ninterface HistoryListProps extends WithStyles<typeof styles> { };\ninterface HistoryListState {\n    history: HistoryItemCollection\n};\n\nexport const HistoryList = withStyles(styles)(class HistoryListInternal extends Component<HistoryListProps, HistoryListState> {\n    private readonly name: string = 'HistoryList'\n\n    constructor(props: HistoryListProps) {\n        super(props)\n\n        this.state = {\n            history: HistoryService.instance.history\n        }\n    }\n\n    componentDidMount() {\n        HistoryService.instance.subscribe(\n            this.name, () => { this.setState({ history: HistoryService.instance.history }) }\n        )\n    }\n\n    componentWillUnmount() {\n        HistoryService.instance.unsubscribe(this.name)\n    }\n\n    render() {\n        const classes = this.props.classes\n        let totals: { [name: string]: number } = {}\n\n        for (let name of this.state.history.today.map((item: HistoryItem) => item.name).sort()) {\n            if (!(name in totals)) {\n                totals[name] = this.state.history.today\n                    .filter((item: HistoryItem) => item.name === name)\n                    .map((item: HistoryItem) => item.durationMs)\n                    .reduce((previous: number, current: number) => previous + current)\n            }\n        }\n\n        return <Grid container spacing={2} className={classes.totalsGrid}>\n            <Grid item xs={2}>\n                <Box flexDirection='column' display='flex' alignItems='center' justifyContent='center' height='100%'>\n                    <Typography variant='h5'>Totals</Typography>\n                </Box>\n            </Grid>\n            {\n                Object.keys(totals).map((name: string) => (\n                    <Grid item key={name} xs={2}>\n                        <Paper>\n                            <TwoText caption={name} text={`${TimeFormat.seconds(totals[name] / 1000)}`} />\n                        </Paper>\n                    </Grid>\n                ))\n            }\n            <Grid item xs={12}>\n                <TableContainer>\n                    <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Task Name</TableCell>\n                                <TableCell align=\"right\">Duration</TableCell>\n                                <TableCell align=\"right\">Start</TableCell>\n                                <TableCell align=\"right\">End</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.history.today.map((item: HistoryItem) => {\n                                let start: Date = new Date(item.start)\n                                let end: Date = new Date(item.end)\n                                return (\n                                    <TableRow key={item.name + item.start}>\n                                        <TableCell component=\"th\" scope=\"row\">\n                                            {item.name}\n                                        </TableCell>\n                                        <TableCell align=\"right\">{TimeFormat.seconds(item.durationMs / 1000)}</TableCell>\n                                        <TableCell align=\"right\">{`${start.getHours()}:${start.getMinutes()}:${start.getSeconds()}`}</TableCell>\n                                        <TableCell align=\"right\">{`${end.getHours()}:${end.getMinutes()}:${end.getSeconds()}`}</TableCell>\n                                    </TableRow>\n                                )\n                            })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Grid>\n        </Grid >\n    }\n});\n","import React, { ChangeEvent, Component, KeyboardEvent, RefObject } from \"react\";\n\nimport {\n    Box,\n    IconButton,\n    Slider,\n    Theme,\n    Typography,\n    WithStyles,\n    withStyles,\n    createStyles,\n    TextField,\n    Grid,\n    Popover\n} from \"@material-ui/core\";\n\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CheckIcon from '@material-ui/icons/Check';\n\nconst styles = (theme: Theme) => createStyles({\n    fullWidth: {\n        width: '100%'\n    },\n\n    centeringGrid: {\n        display: 'flex'\n    },\n\n    listItemText: {\n        display: 'block'\n    },\n\n    sliderSpacing: {\n        width: '100%',\n        justifyContent: 'center',\n        verticalAlign: 'middle'\n    },\n\n    sliderLabelContainer: {\n        marginBottom: -16\n    },\n\n    sliderLabel: {\n        paddingRight: 10\n    },\n\n    editPopover: {\n        padding: 8\n    },\n\n    editContainer: {\n        paddingRight: 8,\n    }\n})\n\ninterface LabelSliderProps extends WithStyles<typeof styles> {\n    label: string,\n    labelSuffix: string,\n    value: number,\n    step: number,\n    min: number,\n    max: number,\n    editing: boolean,\n    onChange: (value: number) => void,\n    onEditSave: (name: string, min: number, max: number) => void,\n    formatCallback: Function\n}\n\ninterface LabelSliderState {\n    value: number\n    label: string,\n    editLabel: string,\n    min: number,\n    editMin: number,\n    max: number,\n    editMax: number,\n    step: number,\n    menuOpen: boolean\n    editing: boolean\n    anchor?: HTMLElement\n    labelError: boolean,\n    minError: boolean,\n    maxError: boolean,\n}\n\nexport const LabelSlider = withStyles(styles)(class LabelSliderComponent extends Component<LabelSliderProps, LabelSliderState> {\n    private popoverRef: RefObject<any>\n\n    static defaultProps = {\n        editing: false\n    }\n\n    constructor(props: LabelSliderProps) {\n        super(props)\n        this.state = {\n            value: this.props.value,\n            label: this.props.label,\n            editLabel: this.props.label,\n            min: this.props.min,\n            editMin: this.props.min,\n            max: this.props.max,\n            editMax: this.props.max,\n            step: this.props.step,\n            menuOpen: false,\n            editing: this.props.editing,\n            labelError: false,\n            minError: false,\n            maxError: false\n        }\n\n        this.popoverRef = React.createRef()\n\n        this.handleOnChange = this.handleOnChange.bind(this)\n        this.handleKeyPress = this.handleKeyPress.bind(this)\n        this.openPopover = this.openPopover.bind(this)\n        this.closePopover = this.closePopover.bind(this)\n        this.saveForm = this.saveForm.bind(this)\n        this.cancelEdit = this.cancelEdit.bind(this)\n    }\n\n    getMinError(min: number, max: number): boolean {\n        return isNaN(min) || min < 1 || min > max\n    }\n\n    getMaxError(min: number, max: number): boolean {\n        return isNaN(max) || max < 1 || max < min\n    }\n\n    handleOnChange(event: any, newValue: number | number[]) {\n        if (typeof newValue === 'number') {\n            this.setState({\n                value: newValue\n            })\n            this.props.onChange(newValue)\n        } else if (typeof newValue === 'object') {\n            this.setState({\n                value: newValue[0]\n            })\n            this.props.onChange(newValue[0])\n        }\n\n    }\n\n    handleKeyPress(event: KeyboardEvent) {\n        if (event.key === 'Enter') {\n            this.saveForm()\n        }\n    }\n\n    openPopover() {\n        this.setState({\n            editing: true,\n            editLabel: this.state.label,\n            editMin: this.state.min,\n            editMax: this.state.max\n        })\n    }\n\n    closePopover() {\n        this.setState({\n            editing: false\n        })\n    }\n\n    saveForm() {\n        if (!(this.state.labelError || this.state.minError || this.state.maxError)) {\n            let value: number\n            if (this.state.value > this.state.editMax) {\n                value = this.state.editMax\n            } else if (this.state.value < this.state.editMin) {\n                value = this.state.editMin\n            } else (\n                value = this.state.value\n            )\n\n            this.props.onEditSave(this.state.editLabel, this.state.editMin, this.state.editMax)\n\n            this.setState({\n                value: value,\n                label: this.state.editLabel,\n                min: this.state.editMin,\n                max: this.state.editMax\n            })\n\n            this.closePopover()\n        }\n\n    }\n\n    cancelEdit() {\n        this.setState({\n            labelError: false,\n            minError: false,\n            maxError: false\n        })\n        this.closePopover()\n    }\n\n    renderNormalView() {\n        const { classes } = this.props\n        return (\n            <>\n                <Box display='flex' flexDirection='row' flex='100%' alignItems='baseline' className={classes.sliderLabelContainer}>\n                    <Typography variant=\"subtitle1\" className={classes.sliderLabel}>{this.state.label}</Typography>\n                    <Typography variant=\"caption\" className={classes.sliderLabel}>({this.props.formatCallback(this.state.value)})</Typography>\n                </Box>\n                <Box display='flex' flex={1} flexDirection='row'>\n                    <Box m={1} flex='100%' display='flex' justifyContent='flex-start' alignItems='center'>\n                        <Slider\n                            value={this.state.value}\n                            step={this.state.step}\n                            min={this.state.min}\n                            max={this.state.max}\n                            onChange={this.handleOnChange}\n                            getAriaValueText={(value: number) => { return `${value}m` }}\n                            valueLabelDisplay=\"off\"\n                            aria-labelledby=\"break-length\"\n                        />\n                    </Box>\n                    <Box flex={1} display='flex' justifyContent='flex-end' alignItems='center'>\n                        <IconButton onClick={(event) => {\n                            this.openPopover()\n                        }}>\n                            <EditOutlinedIcon />\n                        </IconButton>\n                    </Box>\n                </Box>\n            </>\n        )\n    }\n\n    renderEditPopover() {\n        const classes = this.props.classes\n        return (\n            <Popover\n                open={this.state.editing}\n                anchorEl={this.popoverRef.current}\n                anchorOrigin={{ vertical: 'center', horizontal: 'left' }}\n                transformOrigin={{ vertical: 'center', horizontal: 'left' }}\n                onClose={this.cancelEdit}\n                onEscapeKeyDown={this.cancelEdit}\n            >\n                <Box display='flex' flex={1} flexDirection='row' className={classes.editPopover}>\n                    <Grid container>\n                        <Grid item xs={6} className={classes.editContainer}>\n                            <TextField\n                                fullWidth\n                                label=\"Name\"\n                                error={this.state.labelError}\n                                value={this.state.editLabel}\n                                margin='dense'\n                                size='small'\n                                variant='outlined'\n                                onChange={(event: ChangeEvent<HTMLTextAreaElement>) => {\n                                    this.setState({\n                                        editLabel: event.target.value,\n                                        labelError: (\n                                            event.target.value === ''\n                                        )\n                                    })\n                                }}\n                                onKeyPress={this.handleKeyPress}\n                            />\n                        </Grid>\n                        <Grid item xs={3} className={classes.editContainer}>\n                            <TextField\n                                label=\"Min\"\n                                error={this.state.minError}\n                                value={this.state.editMin}\n                                size='small'\n                                variant=\"outlined\"\n                                margin='dense'\n                                onChange={(event: ChangeEvent<HTMLTextAreaElement>) => {\n                                    const value = parseInt(event.target.value)\n                                    this.setState({\n                                        editMin: value || 0,\n                                        minError: this.getMinError(value, this.state.max),\n                                        maxError: this.getMaxError(value, this.state.max)\n                                    })\n                                }}\n                                onKeyPress={this.handleKeyPress}\n                            />\n                        </Grid>\n                        <Grid item xs={3} className={classes.editContainer}>\n                            <TextField\n                                label=\"Max\"\n                                error={this.state.maxError}\n                                value={this.state.editMax}\n                                size='small'\n                                variant=\"outlined\"\n                                margin='dense'\n                                onChange={(event: ChangeEvent<HTMLTextAreaElement>) => {\n                                    const value = parseInt(event.target.value)\n                                    this.setState({\n                                        editMax: value || 0,\n                                        minError: this.getMinError(this.state.min, value),\n                                        maxError: this.getMaxError(this.state.min, value)\n                                    })\n                                }}\n                                onKeyPress={this.handleKeyPress}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Box flex={1} display='flex' justifyContent='flex-end' alignItems='center'>\n                        <IconButton onClick={this.saveForm}>\n                            <CheckIcon color='primary' />\n                        </IconButton>\n                        <IconButton onClick={this.cancelEdit}>\n                            <CancelIcon color='secondary' />\n                        </IconButton>\n                    </Box>\n                </Box>\n            </Popover>\n        )\n    }\n\n    render() {\n        return (\n            <div ref={this.popoverRef}> {/* So the popover can have its origin on the row */}\n                <Box display='flex' flexDirection='column'>\n                    {this.renderNormalView()}\n                    {this.renderEditPopover()}\n                </Box>\n            </div>\n        )\n    }\n});\n","import {\n    Box,\n    Button,\n    ButtonGroup,\n    Card,\n    createStyles,\n    Grid,\n    IconButton,\n    Theme,\n    Typography,\n    WithStyles,\n    withStyles\n} from \"@material-ui/core\"\nimport React, { Component } from \"react\"\nimport { CountdownCollection } from \"../data/Countdown\";\nimport { TimeFormat } from \"../data/format/Time\";\nimport { CountdownService } from \"../services/Countdown\";\nimport { TwoText } from \"../widgets/TwoText\";\n\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport AddIcon from '@material-ui/icons/Add';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport StopIcon from '@material-ui/icons/Stop';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\n\nimport { LabelSlider } from \"../widgets/LabelSlider\";\nimport { HistoryService } from \"../services/History\";\nimport { NotificationService } from \"../services/Notification\";\n\nimport { APP_TITLE, APP_TITLE_SHORT } from \"../App\";\nimport { ConfirmationModal } from \"./ConfirmationModal\";\n\nconst styles = (theme: Theme) => createStyles({\n    popperCardStyle: {\n        paddingLeft: theme.spacing(1),\n        backgroundColor: theme.palette.grey[50],\n        margin: 8,\n        height: '100%'\n    },\n\n    fillWidth: {\n        width: '100%',\n    },\n\n});\n\ninterface CountdownComponentProps extends WithStyles<typeof styles> { };\ninterface CountdownComponentState {\n    countdowns: CountdownCollection\n    editingOrder: boolean\n    confirmDeleteOpen: boolean,\n    confirmDeleteIndex: number,\n    confirmDeleteName: string\n    running: boolean,\n    paused: boolean,\n    warningNotificationSent: boolean,\n};\n\nexport const CountdownComponent = withStyles(styles)(class CountdownInternal extends Component<CountdownComponentProps, CountdownComponentState> {\n    private notificationService: NotificationService\n\n    constructor(props: CountdownComponentProps\n    ) {\n        super(props)\n\n        this.state = {\n            countdowns: CountdownService.instance.countdowns,\n            editingOrder: false,\n            confirmDeleteOpen: false,\n            confirmDeleteIndex: 0,\n            confirmDeleteName: '',\n            running: CountdownService.instance.countdowns.current?.running,\n            paused: false,\n            warningNotificationSent: false,\n        }\n\n        if (CountdownService.instance.countdowns.current?.running) {\n            CountdownService.instance.countdowns.runningCountdown?.update()\n        }\n\n        this.notificationService = NotificationService.instance\n\n        this.handleStartStopOnClick = this.handleStartStopOnClick.bind(this)\n        this.countdownSubscriber = this.countdownSubscriber.bind(this)\n    }\n\n    componentDidMount() {\n        CountdownService.instance.subscribe(\n            'CountdownComponent', () => { this.setState({ countdowns: CountdownService.instance.countdowns }) }\n        )\n\n        if (this.state.running) {\n            this.state.countdowns.current?.subscribe('CountdownComponent', this.countdownSubscriber)\n        }\n    }\n\n    componentWillUnmount() {\n        CountdownService.instance.unsubscribe('CountdownComponent')\n    }\n\n    handleStartStopOnClick() {\n        if (!this.state.running) {\n            this.start()\n        } else {\n            this.stop()\n        }\n    }\n\n    start() {\n        this.setState({ running: true })\n        // this.state.countdowns.current.subscribe('CountdownComponent', this.countdownSubscriber)\n        this.state.countdowns.current.start()\n        window.document.title = `${APP_TITLE_SHORT} [${this.state.countdowns.current.name} ${TimeFormat.seconds(this.state.countdowns.current.secondsLeft)}]`\n    }\n\n    stop() {\n        this.setState({ running: false })\n        // this.state.countdowns.current.unsubscribe('CountdownComponent')\n        this.state.countdowns.current.stop()\n\n        if (this.state.countdowns.current.startTime && this.state.countdowns.current.endTime) {\n            let endTime: number = Date.now()\n\n            if (endTime > this.state.countdowns.current.endTime) {\n                endTime = this.state.countdowns.current.endTime\n            }\n\n            HistoryService.instance.addItem({\n                name: this.state.countdowns.current.name,\n                start: this.state.countdowns.current.startTime,\n                end: endTime\n            })\n        }\n\n        this.setState({\n            warningNotificationSent: false,\n            paused: false\n        })\n\n        this.state.countdowns.advance()\n        window.document.title = APP_TITLE\n    }\n\n    countdownSubscriber() {\n        if (this.state.countdowns.current.running) {\n            window.document.title = `${APP_TITLE_SHORT} [${this.state.countdowns.current.name} ${TimeFormat.seconds(this.state.countdowns.current.secondsLeft)}]`\n            // this.updateCountdownState(this.state.countdowns.current)\n            if (\n                !this.state.warningNotificationSent\n                && this.state.countdowns.current.secondsLeft < 300\n                && this.state.countdowns.current.secondsLeft > 240\n            ) {\n                this.setState({\n                    warningNotificationSent: true\n                })\n\n                this.notificationService.showNotification(\n                    APP_TITLE,\n                    {\n                        body: `Stopping soon: ${this.state.countdowns.current.name}`\n                    }\n                )\n            }\n        } else {\n            this.notificationService.showNotification(\n                APP_TITLE,\n                {\n                    body: `Complete: ${this.state.countdowns.current.name}`\n                }\n            )\n            this.stop()\n        }\n    }\n\n    renderSliders() {\n        const classes = this.props.classes\n        let elements: JSX.Element[] = []\n\n        for (let i in this.state.countdowns.items) {\n            const index: number = parseInt(i)\n            const countdown = this.state.countdowns.items[i]\n            const upDisabled = index === 0\n            const downDisabled = index === this.state.countdowns.items.length - 1\n\n            if (this.state.editingOrder) {\n                elements.push(\n                    <Grid item key={countdown.name}>\n                        <Card className={classes.popperCardStyle}>\n                            <Box display='flex' flexDirection='row'>\n                                <Box flex='100%' display='flex' justifyContent='left' alignItems='center'>\n                                    <Typography variant='button'>\n                                        {countdown.name}\n                                    </Typography>\n                                </Box>\n                                <Box flex={1} display='flex' justifyContent='right' justifyItems='right'>\n                                    <IconButton\n                                        color='primary'\n                                        disabled={upDisabled}\n                                        onClick={() => {\n                                            this.state.countdowns.swapItems(index, index - 1)\n                                        }}\n                                    >\n                                        <ArrowUpwardIcon />\n                                    </IconButton>\n                                    <IconButton\n                                        color='primary'\n                                        disabled={downDisabled}\n                                        onClick={() => {\n                                            this.state.countdowns.swapItems(index, index + 1)\n                                        }}\n                                    >\n                                        <ArrowDownwardIcon />\n                                    </IconButton>\n                                    <IconButton\n                                        color='secondary'\n                                        onClick={() => {\n                                            this.setState({\n                                                confirmDeleteOpen: true,\n                                                confirmDeleteIndex: index,\n                                                confirmDeleteName: countdown.name\n                                            })\n                                        }}\n                                    >\n                                        <DeleteOutlineIcon />\n                                    </IconButton>\n                                </Box>\n                            </Box>\n                        </Card>\n                    </Grid>\n                )\n            } else {\n                elements.push(\n                    <Grid item key={countdown.name}>\n                        <LabelSlider\n                            label={countdown.name}\n                            labelSuffix=\"m\"\n                            value={countdown.value}\n                            step={1}\n                            min={countdown.min}\n                            max={countdown.max}\n                            onChange={(value: number) => {\n                                countdown.value = value\n                            }}\n                            onEditSave={(name: string, min: number, max: number) => {\n                                countdown.name = name\n                                countdown.min = min\n                                countdown.max = max\n                            }}\n                            formatCallback={(value: number) => TimeFormat.minutes(value)}\n                        />\n                    </Grid>\n                )\n            }\n        }\n\n        return elements\n    }\n\n    render() {\n        const classes = this.props.classes\n\n        return <Grid container>\n            <ConfirmationModal\n                open={this.state.confirmDeleteOpen}\n                onClose={() => {\n                    this.setState({\n                        confirmDeleteOpen: false\n                    })\n                }}\n                onConfirm={() => {\n                    this.state.countdowns.deleteItem(this.state.confirmDeleteIndex)\n                    this.setState({\n                        confirmDeleteOpen: false\n                    })\n                }}\n                subtitle='Deleting this cannot be undone'\n            />\n            <Grid item xs={12}>\n                <Box display='flex' flexDirection=\"row\">\n                    <Box flex='100%'>\n                        <Typography variant=\"h3\"> Timers </Typography>\n                    </Box>\n                    <Box flex={1}>\n                        <IconButton\n                            disabled={this.state.editingOrder}\n                            onClick={() => {\n                                this.state.countdowns.addItem({ name: `NEW ${this.state.countdowns.items.length}` })\n                            }}\n                        >\n                            <AddIcon color={this.state.editingOrder ? 'disabled' : 'primary'} />\n                        </IconButton>\n                    </Box>\n                    <Box flex={1}>\n                        <IconButton\n                            onClick={() => {\n                                this.setState({\n                                    editingOrder: !this.state.editingOrder\n                                })\n                            }}\n                        >\n                            <SettingsIcon color={this.state.editingOrder ? 'primary' : 'action'} />\n                        </IconButton>\n                    </Box>\n                </Box>\n            </Grid>\n            <Grid item xs={12}>\n                {this.renderSliders()}\n            </Grid>\n            <Grid item xs={12} sm={3}>\n                <ButtonGroup\n                    className={classes.fillWidth}\n                    variant=\"contained\"\n                    color={\n                        this.state.running\n                            ? this.state.paused ? 'default' : 'secondary'\n                            : 'primary'\n                    }\n                >\n                    <Button className={classes.fillWidth} onClick={this.handleStartStopOnClick}>\n                        {this.state.running ? <StopIcon /> : <PlayArrowIcon />}\n                    </Button>\n                    <Button className={classes.fillWidth} disabled={!this.state.running} onClick={() => {\n                        if (this.state.running) {\n                            this.state.countdowns.current.pause()\n                            this.setState({\n                                paused: !this.state.paused\n                            })\n                        }\n                    }}>\n                        {this.state.paused ? <PlayCircleOutlineIcon /> : <PauseIcon />}\n                    </Button>\n                </ButtonGroup>\n            </Grid>\n            <Grid item xs={4} sm={3}>\n                <TwoText\n                    caption={this.state.running ? this.state.paused ? 'Paused' : \"Running\" : \"On deck\"}\n                    text={this.state.countdowns.current?.name || 'NONE'}\n                />\n            </Grid>\n            <Grid item xs={4} sm={3}>\n                <TwoText\n                    caption=\"Time left\"\n                    text={TimeFormat.seconds(this.state.countdowns.current?.secondsLeft)}\n                />\n            </Grid>\n            <Grid item xs={4} sm={3}>\n                <TwoText caption=\"Up next\" text={this.state.countdowns.next?.name || 'NONE'} />\n            </Grid>\n        </Grid>\n    }\n});\n","import { Backdrop, Box, Fade, Modal, Theme } from \"@material-ui/core\"\nimport { createStyles, WithStyles, withStyles } from \"@material-ui/styles\"\nimport React from \"react\"\nimport { Component } from \"react\"\n\nconst styles = (theme: Theme) => createStyles({\n    container: { width: '100%', height: '100%' },\n});\n\ninterface IFlexGridRow {\n    left: object | number,\n    center?: object | number,\n    right?: object | number\n}\n\nclass FlexGridRow implements IFlexGridRow {\n    public row: IFlexGridRow\n\n    constructor(row: IFlexGridRow) {\n        this.row = row\n    }\n\n    public get left(): object | number { return this.row.left }\n    public get center(): object | number { return this.row.center ? this.row.center : this.row.left }\n    public get right(): object | number { return this.row.right ? this.row.right : this.row.left }\n}\n\ninterface IFlexGrid {\n    top?: number | object\n    left?: number | object\n    bottom?: number | object\n    right?: number | object\n    middle?: number | object // Vertical\n    center?: number | object // Horizontal\n}\n\nclass FlexGrid implements IFlexGrid {\n    grid: IFlexGrid\n\n    constructor(grid?: IFlexGrid) {\n        if (grid) {\n            this.grid = grid\n        } else {\n            this.grid = { top: 1 }\n        }\n    }\n\n    public get top(): number | object { return this.grid.top ? this.grid.top : 1 }\n    public get left(): number | object { return this.grid.left ? this.grid.left : 1 }\n    public get bottom(): number | object { return this.grid.bottom ? this.grid.bottom : 1 }\n    public get right(): number | object { return this.grid.right ? this.grid.right : 1 }\n    public get middle(): number | object { return this.grid.middle ? this.grid.middle : 1 }\n    public get center(): number | object { return this.grid.center ? this.grid.center : 1 }\n}\n\ninterface FlexModalProps extends WithStyles<typeof styles> {\n    open: boolean\n    onClose: () => void\n    spacing?: IFlexGrid\n};\n\ninterface FlexModalState { };\n\nexport const FlexModal = withStyles(styles)(class FlexModalInternal extends Component<FlexModalProps, FlexModalState> {\n    private spacing: FlexGrid\n\n    constructor(props: FlexModalProps) {\n        super(props)\n        this.spacing = new FlexGrid(props.spacing)\n    }\n\n    render() {\n        const classes = this.props.classes;\n        return (\n            <Modal\n                open={this.props.open}\n                onClose={this.props.onClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={this.props.open}>\n                    <Box display='flex' flexDirection='column' className={classes.container}>\n                        <Box flex={this.spacing.top} onClick={this.props.onClose} />\n                        <Box flex={this.spacing.middle}>\n                            <Box display='flex' flexDirection='row' className={classes.container}>\n                                <Box flex={this.spacing.left} onClick={this.props.onClose} />\n                                <Box flex={this.spacing.center}>\n                                    {this.props.children}\n                                </Box>\n                                <Box flex={this.spacing.right} onClick={this.props.onClose} />\n                            </Box>\n                        </Box>\n                        <Box flex={this.spacing.bottom} onClick={this.props.onClose} />\n                    </Box>\n                </Fade>\n            </Modal>\n        )\n    }\n});\n","import React, { Component } from 'react';\n\nimport {\n    AppBar,\n    Backdrop,\n    Button,\n    Card,\n    createStyles,\n    Fade,\n    Grid,\n    IconButton,\n    Modal,\n    Paper,\n    Theme,\n    Toolbar,\n    Typography,\n    WithStyles, withStyles\n} from '@material-ui/core';\n\nimport { Sidebar } from './components/Sidebar';\n\nimport { NotificationService } from './services/Notification'\n\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport 'date-fns';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n} from '@material-ui/pickers';\nimport { HistoryList } from './components/History';\nimport { CountdownComponent } from './components/Countdown';\nimport { FlexModal } from './components/FlexModal';\n\nconst styles = (theme: Theme) => createStyles({\n    root: {\n        flexGrow: 1,\n        overflow: 'hidden'\n    },\n\n    fillWidth: {\n        width: '100%',\n    },\n\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n\n    title: {\n        flexGrow: 1,\n    },\n\n    gridContainer: {\n        flexGrow: 1,\n        padding: 8,\n    },\n\n    paperContainer: {\n        padding: 8\n    },\n\n    sliderBox: {\n        paddingTop: 16\n    },\n\n    popperCardStyle: {\n        paddingLeft: theme.spacing(1),\n        backgroundColor: theme.palette.grey[50],\n        margin: 8,\n        height: '100%'\n    },\n\n    popperContentsStyle: {\n        marginRight: 8\n    },\n\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: 8,\n        border: 'none',\n        width: '100%',\n        height: '100%'\n    },\n\n    statusStyle: {\n        marginTop: -0.5,\n        marginBottom: -1\n    }\n});\n\ninterface AppProps extends WithStyles<typeof styles> { }\n\ninterface AppState {\n    workLength: number,\n    breakLength: number,\n    running: boolean,\n    paused: boolean,\n    secondsLeft: number,\n    sidebarOpen: boolean,\n    notificationSupport: boolean,\n    endTime?: number,\n    editingOrder: boolean,\n    confirmDeleteOpen: boolean\n    confirmDeleteIndex: number\n    confirmDeleteName: string\n    confirmResetOpen: boolean\n    warningNotificationSent: boolean\n    selectedDate: Date,\n    whatsNewModalOpen: boolean,\n}\n\nexport const APP_TITLE: string = 'Task Timer'\nexport const APP_TITLE_SHORT: string = 'TT'\n\nconst notificationService: NotificationService = NotificationService.instance\n\nconst App = withStyles(styles)(class AppComponent extends Component<AppProps, AppState> {\n    public sliderRefs: any[] = []\n\n    constructor(props: AppProps) {\n        super(props)\n\n        let secondsLeft = 0\n        let running = false\n        let paused = false\n\n        const selectedDate = localStorage.getItem('selectedDate')\n        const lastVersion = localStorage.getItem('version')\n\n        this.state = {\n            workLength: 50,\n            breakLength: 10,\n            running: running,\n            paused: paused,\n            secondsLeft: secondsLeft,\n            sidebarOpen: false,\n            notificationSupport: \"Notification\" in window,\n            editingOrder: false,\n            confirmDeleteOpen: false,\n            confirmDeleteIndex: 0,\n            confirmDeleteName: '',\n            confirmResetOpen: false,\n            warningNotificationSent: false,\n            selectedDate: selectedDate ? new Date(JSON.parse(selectedDate)) : new Date(0, 0, 0, 12, 0, 10),\n            whatsNewModalOpen: lastVersion !== process.env.REACT_APP_VERSION\n        }\n\n        this.checkSchedule = this.checkSchedule.bind(this)\n    }\n\n    componentDidMount() {\n        notificationService.requestDesktopNotificationPermissions()\n\n        if (process.env.REACT_APP_VERSION) {\n            localStorage.setItem('version', process.env.REACT_APP_VERSION)\n        }\n\n        this.checkSchedule()\n    }\n\n    checkSchedule() {\n        const now = new Date()\n        if (\n            now.getHours() === this.state.selectedDate.getHours()\n            && now.getMinutes() === this.state.selectedDate.getMinutes()\n        ) {\n            notificationService.showNotification(APP_TITLE, {\n                body: \"It's lunchtime!\"\n            })\n        }\n\n        setTimeout(() => this.checkSchedule(), 1000 * 50)\n    }\n\n    render() {\n        const classes = this.props.classes\n        return (\n            <div className={classes.root}>\n                <FlexModal\n                    open={this.state.whatsNewModalOpen}\n                    onClose={() => { console.log('App.tsx onClose()'); this.setState({ whatsNewModalOpen: false }) }}\n                    spacing={{\n                        top: { xs: 1, md: 2 },\n                        middle: { xs: 1, md: 1 },\n                        center: { xs: 5, md: 1 },\n                        bottom: { xs: 1, md: 2 },\n                    }}\n                >\n                    <Card className={classes.modal}>\n                        <Grid container direction='column' alignItems='center' alignContent='center'>\n                            <Grid item xs>\n                                <Typography variant='h4'>Version {process.env.REACT_APP_VERSION}</Typography>\n                            </Grid>\n                            <Grid item xs>\n                                <Typography variant='body1'>\n                                    Task Timer has been updated since the last time you were here. Click below to\n                                    see what's new!\n                                                    </Typography> <br />\n                            </Grid>\n                            <Grid item xs>\n                                <Button\n                                    variant='contained'\n                                    href='/WHATS_NEW.html'\n                                    target='_blank'\n                                    onClick={() => { this.setState({ whatsNewModalOpen: false }) }}\n                                >\n                                    See what's new!\n                                            </Button>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </FlexModal>\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            className={classes.menuButton}\n                            color=\"inherit\" aria-label=\"menu\"\n                            onClick={() => {\n                                this.setState({ sidebarOpen: true })\n                            }}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            {APP_TITLE}\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Sidebar\n                    open={this.state.sidebarOpen}\n                    onClose={() => {\n                        this.setState({ sidebarOpen: false })\n                    }}\n                />\n\n                <Grid container className={classes.gridContainer} spacing={2}>\n                    <Grid item xs={12} md={8}>\n                        <Paper className={classes.paperContainer}>\n                            <CountdownComponent />\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <Paper className={classes.paperContainer}>\n                            <Grid container>\n                                <Grid item xs={12}>\n                                    <Typography variant=\"h3\">Schedule</Typography>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                        <KeyboardTimePicker\n                                            id=\"lunch-time-picker\"\n                                            label=\"Lunch\"\n                                            value={this.state.selectedDate}\n                                            onChange={(date: any) => {\n                                                this.setState({\n                                                    selectedDate: date\n                                                })\n                                                localStorage.setItem('selectedDate', JSON.stringify(date))\n                                            }}\n                                            minutesStep={5}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <Paper className={classes.paperContainer}>\n                            <Grid container>\n                                <Grid item xs={12}>\n                                    <Typography variant=\"h3\">History</Typography>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <HistoryList />\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div >\n        );\n    }\n});\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}